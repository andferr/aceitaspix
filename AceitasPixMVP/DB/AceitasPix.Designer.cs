//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 05/12/2022 17:52:34
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AceitaspixModel", "FK_ApplicationUser_Claims", "Aspnetuser", RelationshipMultiplicity.One, typeof(AceitaspixModel.Aspnetuser), "Aspnetuserclaims", RelationshipMultiplicity.Many, typeof(AceitaspixModel.Aspnetuserclaim), true)]
[assembly: EdmRelationshipAttribute("AceitaspixModel", "FK_ApplicationUser_Logins", "Aspnetuser", RelationshipMultiplicity.One, typeof(AceitaspixModel.Aspnetuser), "Aspnetuserlogins", RelationshipMultiplicity.Many, typeof(AceitaspixModel.Aspnetuserlogin), true)]
[assembly: EdmRelationshipAttribute("AceitaspixModel", "fk_user_acc", "Aspnetuser", RelationshipMultiplicity.One, typeof(AceitaspixModel.Aspnetuser), "UserTwitchAccounts", RelationshipMultiplicity.Many, typeof(AceitaspixModel.UserTwitchAccount), true)]
[assembly: EdmRelationshipAttribute("AceitaspixModel", "fk_user_withdraw", "Aspnetuser", RelationshipMultiplicity.One, typeof(AceitaspixModel.Aspnetuser), "Withdraws", RelationshipMultiplicity.Many, typeof(AceitaspixModel.Withdraw), true)]
[assembly: EdmRelationshipAttribute("AceitaspixModel", "Aspnetuser_Aspnetrole", "Aspnetusers", RelationshipMultiplicity.Many, typeof(AceitaspixModel.Aspnetuser), "Aspnetroles", RelationshipMultiplicity.Many, typeof(AceitaspixModel.Aspnetrole))]
[assembly: EdmRelationshipAttribute("AceitaspixModel", "fk_account_twitch_account", "UserTwitchAccount", RelationshipMultiplicity.ZeroOrOne, typeof(AceitaspixModel.UserTwitchAccount), "UserAccounts", RelationshipMultiplicity.Many, typeof(AceitaspixModel.UserAccount), true)]
[assembly: EdmRelationshipAttribute("AceitaspixModel", "fk_user_account_aspnetuser", "Aspnetuser", RelationshipMultiplicity.One, typeof(AceitaspixModel.Aspnetuser), "UserAccounts", RelationshipMultiplicity.Many, typeof(AceitaspixModel.UserAccount), true)]
[assembly: EdmRelationshipAttribute("AceitaspixModel", "fk_user_receive", "UserAccount", RelationshipMultiplicity.One, typeof(AceitaspixModel.UserAccount), "Payments", RelationshipMultiplicity.Many, typeof(AceitaspixModel.Payment), true)]
[assembly: EdmRelationshipAttribute("AceitaspixModel", "fk_payment_status", "PaymentStatus", RelationshipMultiplicity.ZeroOrOne, typeof(AceitaspixModel.PaymentStatus), "Payments", RelationshipMultiplicity.Many, typeof(AceitaspixModel.Payment), true)]

#endregion

namespace AceitaspixModel
{

    #region AceitaspixEntities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AceitaspixEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new AceitaspixEntities object.
        /// </summary>
        public AceitaspixEntities() :
                base(@"name=AceitaspixEntitiesConnectionString", "AceitaspixEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new AceitaspixEntities object using the connection string found in the 'AceitaspixEntities' section of the application configuration file.
        /// </summary>
        public AceitaspixEntities(string connectionString) :
                base(connectionString, "AceitaspixEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new AceitaspixEntities object.
        /// </summary>
        public AceitaspixEntities(EntityConnection connection) : base(connection, "AceitaspixEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }


        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Migrationhistory> Migrationhistories
        {
            get
            {
                if ((_Migrationhistories == null))
                {
                    _Migrationhistories = base.CreateObjectSet<Migrationhistory>("Migrationhistories");
                }
                return _Migrationhistories;
            }
        }
        private ObjectSet<Migrationhistory> _Migrationhistories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aspnetrole> Aspnetroles
        {
            get
            {
                if ((_Aspnetroles == null))
                {
                    _Aspnetroles = base.CreateObjectSet<Aspnetrole>("Aspnetroles");
                }
                return _Aspnetroles;
            }
        }
        private ObjectSet<Aspnetrole> _Aspnetroles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aspnetuserclaim> Aspnetuserclaims
        {
            get
            {
                if ((_Aspnetuserclaims == null))
                {
                    _Aspnetuserclaims = base.CreateObjectSet<Aspnetuserclaim>("Aspnetuserclaims");
                }
                return _Aspnetuserclaims;
            }
        }
        private ObjectSet<Aspnetuserclaim> _Aspnetuserclaims;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aspnetuserlogin> Aspnetuserlogins
        {
            get
            {
                if ((_Aspnetuserlogins == null))
                {
                    _Aspnetuserlogins = base.CreateObjectSet<Aspnetuserlogin>("Aspnetuserlogins");
                }
                return _Aspnetuserlogins;
            }
        }
        private ObjectSet<Aspnetuserlogin> _Aspnetuserlogins;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aspnetuser> Aspnetusers
        {
            get
            {
                if ((_Aspnetusers == null))
                {
                    _Aspnetusers = base.CreateObjectSet<Aspnetuser>("Aspnetusers");
                }
                return _Aspnetusers;
            }
        }
        private ObjectSet<Aspnetuser> _Aspnetusers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigTwitch> ConfigTwitches
        {
            get
            {
                if ((_ConfigTwitches == null))
                {
                    _ConfigTwitches = base.CreateObjectSet<ConfigTwitch>("ConfigTwitches");
                }
                return _ConfigTwitches;
            }
        }
        private ObjectSet<ConfigTwitch> _ConfigTwitches;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserTwitchAccount> UserTwitchAccounts
        {
            get
            {
                if ((_UserTwitchAccounts == null))
                {
                    _UserTwitchAccounts = base.CreateObjectSet<UserTwitchAccount>("UserTwitchAccounts");
                }
                return _UserTwitchAccounts;
            }
        }
        private ObjectSet<UserTwitchAccount> _UserTwitchAccounts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Withdraw> Withdraws
        {
            get
            {
                if ((_Withdraws == null))
                {
                    _Withdraws = base.CreateObjectSet<Withdraw>("Withdraws");
                }
                return _Withdraws;
            }
        }
        private ObjectSet<Withdraw> _Withdraws;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payment> Payments
        {
            get
            {
                if ((_Payments == null))
                {
                    _Payments = base.CreateObjectSet<Payment>("Payments");
                }
                return _Payments;
            }
        }
        private ObjectSet<Payment> _Payments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccount> UserAccounts
        {
            get
            {
                if ((_UserAccounts == null))
                {
                    _UserAccounts = base.CreateObjectSet<UserAccount>("UserAccounts");
                }
                return _UserAccounts;
            }
        }
        private ObjectSet<UserAccount> _UserAccounts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentStatus> PaymentStatuses
        {
            get
            {
                if ((_PaymentStatuses == null))
                {
                    _PaymentStatuses = base.CreateObjectSet<PaymentStatus>("PaymentStatuses");
                }
                return _PaymentStatuses;
            }
        }
        private ObjectSet<PaymentStatus> _PaymentStatuses;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Migrationhistories EntitySet.
        /// </summary>
        public void AddToMigrationhistories(Migrationhistory migrationhistory)
        {
            base.AddObject("Migrationhistories", migrationhistory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Aspnetroles EntitySet.
        /// </summary>
        public void AddToAspnetroles(Aspnetrole aspnetrole)
        {
            base.AddObject("Aspnetroles", aspnetrole);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Aspnetuserclaims EntitySet.
        /// </summary>
        public void AddToAspnetuserclaims(Aspnetuserclaim aspnetuserclaim)
        {
            base.AddObject("Aspnetuserclaims", aspnetuserclaim);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Aspnetuserlogins EntitySet.
        /// </summary>
        public void AddToAspnetuserlogins(Aspnetuserlogin aspnetuserlogin)
        {
            base.AddObject("Aspnetuserlogins", aspnetuserlogin);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Aspnetusers EntitySet.
        /// </summary>
        public void AddToAspnetusers(Aspnetuser aspnetuser)
        {
            base.AddObject("Aspnetusers", aspnetuser);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigTwitches EntitySet.
        /// </summary>
        public void AddToConfigTwitches(ConfigTwitch configTwitch)
        {
            base.AddObject("ConfigTwitches", configTwitch);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserTwitchAccounts EntitySet.
        /// </summary>
        public void AddToUserTwitchAccounts(UserTwitchAccount userTwitchAccount)
        {
            base.AddObject("UserTwitchAccounts", userTwitchAccount);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Withdraws EntitySet.
        /// </summary>
        public void AddToWithdraws(Withdraw withdraw)
        {
            base.AddObject("Withdraws", withdraw);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Payments EntitySet.
        /// </summary>
        public void AddToPayments(Payment payment)
        {
            base.AddObject("Payments", payment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccounts EntitySet.
        /// </summary>
        public void AddToUserAccounts(UserAccount userAccount)
        {
            base.AddObject("UserAccounts", userAccount);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentStatuses EntitySet.
        /// </summary>
        public void AddToPaymentStatuses(PaymentStatus paymentStatus)
        {
            base.AddObject("PaymentStatuses", paymentStatus);
        }

        #endregion
    }

    #endregion
}

namespace AceitaspixModel
{

    /// <summary>
    /// There are no comments for AceitaspixModel.Migrationhistory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// MigrationId
    /// ContextKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="Migrationhistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Migrationhistory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Migrationhistory object.
        /// </summary>
        /// <param name="migrationId">Initial value of MigrationId.</param>
        /// <param name="contextKey">Initial value of ContextKey.</param>
        /// <param name="model">Initial value of Model.</param>
        /// <param name="productVersion">Initial value of ProductVersion.</param>
        public static Migrationhistory CreateMigrationhistory(string migrationId, string contextKey, byte[] model, string productVersion)
        {
            Migrationhistory migrationhistory = new Migrationhistory();
            migrationhistory.MigrationId = migrationId;
            migrationhistory.ContextKey = contextKey;
            migrationhistory.Model = model;
            migrationhistory.ProductVersion = productVersion;
            return migrationhistory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for MigrationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string MigrationId
        {
            get
            {
                string value = _MigrationId;
                OnGetMigrationId(ref value);
                return value;
            }
            set
            {
                if (_MigrationId != value)
                {
                  OnMigrationIdChanging(ref value);
                  ReportPropertyChanging("MigrationId");
                  _MigrationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("MigrationId");
                  OnMigrationIdChanged();
              }
            }
        }
        private string _MigrationId;
        partial void OnGetMigrationId(ref string value);
        partial void OnMigrationIdChanging(ref string value);
        partial void OnMigrationIdChanged();
    
        /// <summary>
        /// There are no comments for ContextKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ContextKey
        {
            get
            {
                string value = _ContextKey;
                OnGetContextKey(ref value);
                return value;
            }
            set
            {
                if (_ContextKey != value)
                {
                  OnContextKeyChanging(ref value);
                  ReportPropertyChanging("ContextKey");
                  _ContextKey = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ContextKey");
                  OnContextKeyChanged();
              }
            }
        }
        private string _ContextKey;
        partial void OnGetContextKey(ref string value);
        partial void OnContextKeyChanging(ref string value);
        partial void OnContextKeyChanged();
    
        /// <summary>
        /// There are no comments for Model in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual byte[] Model
        {
            get
            {
                byte[] value = _Model;
                OnGetModel(ref value);
                return value;
            }
            set
            {
                if (_Model != value)
                {
                  OnModelChanging(ref value);
                  ReportPropertyChanging("Model");
                  _Model = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Model");
                  OnModelChanged();
              }
            }
        }
        private byte[] _Model;
        partial void OnGetModel(ref byte[] value);
        partial void OnModelChanging(ref byte[] value);
        partial void OnModelChanged();
    
        /// <summary>
        /// There are no comments for ProductVersion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ProductVersion
        {
            get
            {
                string value = _ProductVersion;
                OnGetProductVersion(ref value);
                return value;
            }
            set
            {
                if (_ProductVersion != value)
                {
                  OnProductVersionChanging(ref value);
                  ReportPropertyChanging("ProductVersion");
                  _ProductVersion = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ProductVersion");
                  OnProductVersionChanged();
              }
            }
        }
        private string _ProductVersion;
        partial void OnGetProductVersion(ref string value);
        partial void OnProductVersionChanging(ref string value);
        partial void OnProductVersionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.Aspnetrole in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="Aspnetrole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aspnetrole : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Aspnetrole object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Aspnetrole CreateAspnetrole(string id, string name)
        {
            Aspnetrole aspnetrole = new Aspnetrole();
            aspnetrole.Id = id;
            aspnetrole.Name = name;
            return aspnetrole;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Id
        {
            get
            {
                string value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private string _Id;
        partial void OnGetId(ref string value);
        partial void OnIdChanging(ref string value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Aspnetusers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "Aspnetuser_Aspnetrole", "Aspnetusers")]
        public virtual EntityCollection<Aspnetuser> Aspnetusers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Aspnetuser>("AceitaspixModel.Aspnetuser_Aspnetrole", "Aspnetusers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Aspnetuser>("AceitaspixModel.Aspnetuser_Aspnetrole", "Aspnetusers", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.Aspnetuserclaim in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="Aspnetuserclaim")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aspnetuserclaim : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Aspnetuserclaim object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="userId">Initial value of UserId.</param>
        public static Aspnetuserclaim CreateAspnetuserclaim(int id, string userId)
        {
            Aspnetuserclaim aspnetuserclaim = new Aspnetuserclaim();
            aspnetuserclaim.Id = id;
            aspnetuserclaim.UserId = userId;
            return aspnetuserclaim;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for ClaimType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClaimType
        {
            get
            {
                string value = _ClaimType;
                OnGetClaimType(ref value);
                return value;
            }
            set
            {
                if (_ClaimType != value)
                {
                  OnClaimTypeChanging(ref value);
                  ReportPropertyChanging("ClaimType");
                  _ClaimType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClaimType");
                  OnClaimTypeChanged();
              }
            }
        }
        private string _ClaimType;
        partial void OnGetClaimType(ref string value);
        partial void OnClaimTypeChanging(ref string value);
        partial void OnClaimTypeChanged();
    
        /// <summary>
        /// There are no comments for ClaimValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClaimValue
        {
            get
            {
                string value = _ClaimValue;
                OnGetClaimValue(ref value);
                return value;
            }
            set
            {
                if (_ClaimValue != value)
                {
                  OnClaimValueChanging(ref value);
                  ReportPropertyChanging("ClaimValue");
                  _ClaimValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClaimValue");
                  OnClaimValueChanged();
              }
            }
        }
        private string _ClaimValue;
        partial void OnGetClaimValue(ref string value);
        partial void OnClaimValueChanging(ref string value);
        partial void OnClaimValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "FK_ApplicationUser_Claims", "Aspnetuser")]
        public virtual Aspnetuser Aspnetuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Claims", "Aspnetuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Claims", "Aspnetuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aspnetuser> AspnetuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Claims", "Aspnetuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Claims", "Aspnetuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Claims", "Aspnetuser").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.Aspnetuserlogin in the schema.
    /// </summary>
    /// <KeyProperties>
    /// LoginProvider
    /// ProviderKey
    /// UserId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="Aspnetuserlogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aspnetuserlogin : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Aspnetuserlogin object.
        /// </summary>
        /// <param name="loginProvider">Initial value of LoginProvider.</param>
        /// <param name="providerKey">Initial value of ProviderKey.</param>
        /// <param name="userId">Initial value of UserId.</param>
        public static Aspnetuserlogin CreateAspnetuserlogin(string loginProvider, string providerKey, string userId)
        {
            Aspnetuserlogin aspnetuserlogin = new Aspnetuserlogin();
            aspnetuserlogin.LoginProvider = loginProvider;
            aspnetuserlogin.ProviderKey = providerKey;
            aspnetuserlogin.UserId = userId;
            return aspnetuserlogin;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for LoginProvider in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LoginProvider
        {
            get
            {
                string value = _LoginProvider;
                OnGetLoginProvider(ref value);
                return value;
            }
            set
            {
                if (_LoginProvider != value)
                {
                  OnLoginProviderChanging(ref value);
                  ReportPropertyChanging("LoginProvider");
                  _LoginProvider = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LoginProvider");
                  OnLoginProviderChanged();
              }
            }
        }
        private string _LoginProvider;
        partial void OnGetLoginProvider(ref string value);
        partial void OnLoginProviderChanging(ref string value);
        partial void OnLoginProviderChanged();
    
        /// <summary>
        /// There are no comments for ProviderKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ProviderKey
        {
            get
            {
                string value = _ProviderKey;
                OnGetProviderKey(ref value);
                return value;
            }
            set
            {
                if (_ProviderKey != value)
                {
                  OnProviderKeyChanging(ref value);
                  ReportPropertyChanging("ProviderKey");
                  _ProviderKey = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ProviderKey");
                  OnProviderKeyChanged();
              }
            }
        }
        private string _ProviderKey;
        partial void OnGetProviderKey(ref string value);
        partial void OnProviderKeyChanging(ref string value);
        partial void OnProviderKeyChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "FK_ApplicationUser_Logins", "Aspnetuser")]
        public virtual Aspnetuser Aspnetuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Logins", "Aspnetuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Logins", "Aspnetuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aspnetuser> AspnetuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Logins", "Aspnetuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Logins", "Aspnetuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.FK_ApplicationUser_Logins", "Aspnetuser").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.Aspnetuser in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="Aspnetuser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aspnetuser : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Aspnetuser object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="emailConfirmed">Initial value of EmailConfirmed.</param>
        /// <param name="phoneNumberConfirmed">Initial value of PhoneNumberConfirmed.</param>
        /// <param name="twoFactorEnabled">Initial value of TwoFactorEnabled.</param>
        /// <param name="lockoutEnabled">Initial value of LockoutEnabled.</param>
        /// <param name="accessFailedCount">Initial value of AccessFailedCount.</param>
        /// <param name="userName">Initial value of UserName.</param>
        public static Aspnetuser CreateAspnetuser(string id, bool emailConfirmed, bool phoneNumberConfirmed, bool twoFactorEnabled, bool lockoutEnabled, int accessFailedCount, string userName)
        {
            Aspnetuser aspnetuser = new Aspnetuser();
            aspnetuser.Id = id;
            aspnetuser.EmailConfirmed = emailConfirmed;
            aspnetuser.PhoneNumberConfirmed = phoneNumberConfirmed;
            aspnetuser.TwoFactorEnabled = twoFactorEnabled;
            aspnetuser.LockoutEnabled = lockoutEnabled;
            aspnetuser.AccessFailedCount = accessFailedCount;
            aspnetuser.UserName = userName;
            return aspnetuser;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Id
        {
            get
            {
                string value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private string _Id;
        partial void OnGetId(ref string value);
        partial void OnIdChanging(ref string value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for EmailConfirmed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool EmailConfirmed
        {
            get
            {
                bool value = _EmailConfirmed;
                OnGetEmailConfirmed(ref value);
                return value;
            }
            set
            {
                if (_EmailConfirmed != value)
                {
                  OnEmailConfirmedChanging(ref value);
                  ReportPropertyChanging("EmailConfirmed");
                  _EmailConfirmed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmailConfirmed");
                  OnEmailConfirmedChanged();
              }
            }
        }
        private bool _EmailConfirmed;
        partial void OnGetEmailConfirmed(ref bool value);
        partial void OnEmailConfirmedChanging(ref bool value);
        partial void OnEmailConfirmedChanged();
    
        /// <summary>
        /// There are no comments for PasswordHash in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PasswordHash
        {
            get
            {
                string value = _PasswordHash;
                OnGetPasswordHash(ref value);
                return value;
            }
            set
            {
                if (_PasswordHash != value)
                {
                  OnPasswordHashChanging(ref value);
                  ReportPropertyChanging("PasswordHash");
                  _PasswordHash = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PasswordHash");
                  OnPasswordHashChanged();
              }
            }
        }
        private string _PasswordHash;
        partial void OnGetPasswordHash(ref string value);
        partial void OnPasswordHashChanging(ref string value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// There are no comments for SecurityStamp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SecurityStamp
        {
            get
            {
                string value = _SecurityStamp;
                OnGetSecurityStamp(ref value);
                return value;
            }
            set
            {
                if (_SecurityStamp != value)
                {
                  OnSecurityStampChanging(ref value);
                  ReportPropertyChanging("SecurityStamp");
                  _SecurityStamp = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SecurityStamp");
                  OnSecurityStampChanged();
              }
            }
        }
        private string _SecurityStamp;
        partial void OnGetSecurityStamp(ref string value);
        partial void OnSecurityStampChanging(ref string value);
        partial void OnSecurityStampChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PhoneNumber
        {
            get
            {
                string value = _PhoneNumber;
                OnGetPhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                  OnPhoneNumberChanging(ref value);
                  ReportPropertyChanging("PhoneNumber");
                  _PhoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PhoneNumber");
                  OnPhoneNumberChanged();
              }
            }
        }
        private string _PhoneNumber;
        partial void OnGetPhoneNumber(ref string value);
        partial void OnPhoneNumberChanging(ref string value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumberConfirmed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool PhoneNumberConfirmed
        {
            get
            {
                bool value = _PhoneNumberConfirmed;
                OnGetPhoneNumberConfirmed(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumberConfirmed != value)
                {
                  OnPhoneNumberConfirmedChanging(ref value);
                  ReportPropertyChanging("PhoneNumberConfirmed");
                  _PhoneNumberConfirmed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhoneNumberConfirmed");
                  OnPhoneNumberConfirmedChanged();
              }
            }
        }
        private bool _PhoneNumberConfirmed;
        partial void OnGetPhoneNumberConfirmed(ref bool value);
        partial void OnPhoneNumberConfirmedChanging(ref bool value);
        partial void OnPhoneNumberConfirmedChanged();
    
        /// <summary>
        /// There are no comments for TwoFactorEnabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool TwoFactorEnabled
        {
            get
            {
                bool value = _TwoFactorEnabled;
                OnGetTwoFactorEnabled(ref value);
                return value;
            }
            set
            {
                if (_TwoFactorEnabled != value)
                {
                  OnTwoFactorEnabledChanging(ref value);
                  ReportPropertyChanging("TwoFactorEnabled");
                  _TwoFactorEnabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TwoFactorEnabled");
                  OnTwoFactorEnabledChanged();
              }
            }
        }
        private bool _TwoFactorEnabled;
        partial void OnGetTwoFactorEnabled(ref bool value);
        partial void OnTwoFactorEnabledChanging(ref bool value);
        partial void OnTwoFactorEnabledChanged();
    
        /// <summary>
        /// There are no comments for LockoutEndDateUtc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LockoutEndDateUtc
        {
            get
            {
                global::System.DateTime? value = _LockoutEndDateUtc;
                OnGetLockoutEndDateUtc(ref value);
                return value;
            }
            set
            {
                if (_LockoutEndDateUtc != value)
                {
                  OnLockoutEndDateUtcChanging(ref value);
                  ReportPropertyChanging("LockoutEndDateUtc");
                  _LockoutEndDateUtc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LockoutEndDateUtc");
                  OnLockoutEndDateUtcChanged();
              }
            }
        }
        private global::System.DateTime? _LockoutEndDateUtc;
        partial void OnGetLockoutEndDateUtc(ref global::System.DateTime? value);
        partial void OnLockoutEndDateUtcChanging(ref global::System.DateTime? value);
        partial void OnLockoutEndDateUtcChanged();
    
        /// <summary>
        /// There are no comments for LockoutEnabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool LockoutEnabled
        {
            get
            {
                bool value = _LockoutEnabled;
                OnGetLockoutEnabled(ref value);
                return value;
            }
            set
            {
                if (_LockoutEnabled != value)
                {
                  OnLockoutEnabledChanging(ref value);
                  ReportPropertyChanging("LockoutEnabled");
                  _LockoutEnabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LockoutEnabled");
                  OnLockoutEnabledChanged();
              }
            }
        }
        private bool _LockoutEnabled;
        partial void OnGetLockoutEnabled(ref bool value);
        partial void OnLockoutEnabledChanging(ref bool value);
        partial void OnLockoutEnabledChanged();
    
        /// <summary>
        /// There are no comments for AccessFailedCount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccessFailedCount
        {
            get
            {
                int value = _AccessFailedCount;
                OnGetAccessFailedCount(ref value);
                return value;
            }
            set
            {
                if (_AccessFailedCount != value)
                {
                  OnAccessFailedCountChanging(ref value);
                  ReportPropertyChanging("AccessFailedCount");
                  _AccessFailedCount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccessFailedCount");
                  OnAccessFailedCountChanged();
              }
            }
        }
        private int _AccessFailedCount;
        partial void OnGetAccessFailedCount(ref int value);
        partial void OnAccessFailedCountChanging(ref int value);
        partial void OnAccessFailedCountChanged();
    
        /// <summary>
        /// There are no comments for UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserName
        {
            get
            {
                string value = _UserName;
                OnGetUserName(ref value);
                return value;
            }
            set
            {
                if (_UserName != value)
                {
                  OnUserNameChanging(ref value);
                  ReportPropertyChanging("UserName");
                  _UserName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserName");
                  OnUserNameChanged();
              }
            }
        }
        private string _UserName;
        partial void OnGetUserName(ref string value);
        partial void OnUserNameChanging(ref string value);
        partial void OnUserNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Aspnetuserclaims in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "FK_ApplicationUser_Claims", "Aspnetuserclaims")]
        public virtual EntityCollection<Aspnetuserclaim> Aspnetuserclaims
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Aspnetuserclaim>("AceitaspixModel.FK_ApplicationUser_Claims", "Aspnetuserclaims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Aspnetuserclaim>("AceitaspixModel.FK_ApplicationUser_Claims", "Aspnetuserclaims", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Aspnetuserlogins in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "FK_ApplicationUser_Logins", "Aspnetuserlogins")]
        public virtual EntityCollection<Aspnetuserlogin> Aspnetuserlogins
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Aspnetuserlogin>("AceitaspixModel.FK_ApplicationUser_Logins", "Aspnetuserlogins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Aspnetuserlogin>("AceitaspixModel.FK_ApplicationUser_Logins", "Aspnetuserlogins", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserTwitchAccounts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_user_acc", "UserTwitchAccounts")]
        public virtual EntityCollection<UserTwitchAccount> UserTwitchAccounts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserTwitchAccount>("AceitaspixModel.fk_user_acc", "UserTwitchAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserTwitchAccount>("AceitaspixModel.fk_user_acc", "UserTwitchAccounts", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Withdraws in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_user_withdraw", "Withdraws")]
        public virtual EntityCollection<Withdraw> Withdraws
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Withdraw>("AceitaspixModel.fk_user_withdraw", "Withdraws");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Withdraw>("AceitaspixModel.fk_user_withdraw", "Withdraws", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Aspnetroles in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "Aspnetuser_Aspnetrole", "Aspnetroles")]
        public virtual EntityCollection<Aspnetrole> Aspnetroles
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Aspnetrole>("AceitaspixModel.Aspnetuser_Aspnetrole", "Aspnetroles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Aspnetrole>("AceitaspixModel.Aspnetuser_Aspnetrole", "Aspnetroles", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserAccounts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_user_account_aspnetuser", "UserAccounts")]
        public virtual EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserAccount>("AceitaspixModel.fk_user_account_aspnetuser", "UserAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserAccount>("AceitaspixModel.fk_user_account_aspnetuser", "UserAccounts", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.ConfigTwitch in the schema.
    /// </summary>
    /// <KeyProperties>
    /// IdConfigTwitch
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="ConfigTwitch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigTwitch : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ConfigTwitch object.
        /// </summary>
        /// <param name="idConfigTwitch">Initial value of IdConfigTwitch.</param>
        public static ConfigTwitch CreateConfigTwitch(int idConfigTwitch)
        {
            ConfigTwitch configTwitch = new ConfigTwitch();
            configTwitch.IdConfigTwitch = idConfigTwitch;
            return configTwitch;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for IdConfigTwitch in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IdConfigTwitch
        {
            get
            {
                int value = _IdConfigTwitch;
                OnGetIdConfigTwitch(ref value);
                return value;
            }
            set
            {
                if (_IdConfigTwitch != value)
                {
                  OnIdConfigTwitchChanging(ref value);
                  ReportPropertyChanging("IdConfigTwitch");
                  _IdConfigTwitch = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdConfigTwitch");
                  OnIdConfigTwitchChanged();
              }
            }
        }
        private int _IdConfigTwitch;
        partial void OnGetIdConfigTwitch(ref int value);
        partial void OnIdConfigTwitchChanging(ref int value);
        partial void OnIdConfigTwitchChanged();
    
        /// <summary>
        /// There are no comments for ClientId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClientId
        {
            get
            {
                string value = _ClientId;
                OnGetClientId(ref value);
                return value;
            }
            set
            {
                if (_ClientId != value)
                {
                  OnClientIdChanging(ref value);
                  ReportPropertyChanging("ClientId");
                  _ClientId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClientId");
                  OnClientIdChanged();
              }
            }
        }
        private string _ClientId;
        partial void OnGetClientId(ref string value);
        partial void OnClientIdChanging(ref string value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// There are no comments for RedirectUri in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RedirectUri
        {
            get
            {
                string value = _RedirectUri;
                OnGetRedirectUri(ref value);
                return value;
            }
            set
            {
                if (_RedirectUri != value)
                {
                  OnRedirectUriChanging(ref value);
                  ReportPropertyChanging("RedirectUri");
                  _RedirectUri = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RedirectUri");
                  OnRedirectUriChanged();
              }
            }
        }
        private string _RedirectUri;
        partial void OnGetRedirectUri(ref string value);
        partial void OnRedirectUriChanging(ref string value);
        partial void OnRedirectUriChanged();
    
        /// <summary>
        /// There are no comments for ClientSecret in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClientSecret
        {
            get
            {
                string value = _ClientSecret;
                OnGetClientSecret(ref value);
                return value;
            }
            set
            {
                if (_ClientSecret != value)
                {
                  OnClientSecretChanging(ref value);
                  ReportPropertyChanging("ClientSecret");
                  _ClientSecret = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClientSecret");
                  OnClientSecretChanged();
              }
            }
        }
        private string _ClientSecret;
        partial void OnGetClientSecret(ref string value);
        partial void OnClientSecretChanging(ref string value);
        partial void OnClientSecretChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.UserTwitchAccount in the schema.
    /// </summary>
    /// <KeyProperties>
    /// IdUserTwittchAccount
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="UserTwitchAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTwitchAccount : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UserTwitchAccount object.
        /// </summary>
        /// <param name="idUserTwittchAccount">Initial value of IdUserTwittchAccount.</param>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="expirationDate">Initial value of ExpirationDate.</param>
        public static UserTwitchAccount CreateUserTwitchAccount(int idUserTwittchAccount, string userId, global::System.DateTime expirationDate)
        {
            UserTwitchAccount userTwitchAccount = new UserTwitchAccount();
            userTwitchAccount.IdUserTwittchAccount = idUserTwittchAccount;
            userTwitchAccount.UserId = userId;
            userTwitchAccount.ExpirationDate = expirationDate;
            return userTwitchAccount;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for IdUserTwittchAccount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IdUserTwittchAccount
        {
            get
            {
                int value = _IdUserTwittchAccount;
                OnGetIdUserTwittchAccount(ref value);
                return value;
            }
            set
            {
                if (_IdUserTwittchAccount != value)
                {
                  OnIdUserTwittchAccountChanging(ref value);
                  ReportPropertyChanging("IdUserTwittchAccount");
                  _IdUserTwittchAccount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdUserTwittchAccount");
                  OnIdUserTwittchAccountChanged();
              }
            }
        }
        private int _IdUserTwittchAccount;
        partial void OnGetIdUserTwittchAccount(ref int value);
        partial void OnIdUserTwittchAccountChanging(ref int value);
        partial void OnIdUserTwittchAccountChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for TwitchUsername in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TwitchUsername
        {
            get
            {
                string value = _TwitchUsername;
                OnGetTwitchUsername(ref value);
                return value;
            }
            set
            {
                if (_TwitchUsername != value)
                {
                  OnTwitchUsernameChanging(ref value);
                  ReportPropertyChanging("TwitchUsername");
                  _TwitchUsername = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TwitchUsername");
                  OnTwitchUsernameChanged();
              }
            }
        }
        private string _TwitchUsername;
        partial void OnGetTwitchUsername(ref string value);
        partial void OnTwitchUsernameChanging(ref string value);
        partial void OnTwitchUsernameChanged();
    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Code
        {
            get
            {
                string value = _Code;
                OnGetCode(ref value);
                return value;
            }
            set
            {
                if (_Code != value)
                {
                  OnCodeChanging(ref value);
                  ReportPropertyChanging("Code");
                  _Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Code");
                  OnCodeChanged();
              }
            }
        }
        private string _Code;
        partial void OnGetCode(ref string value);
        partial void OnCodeChanging(ref string value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// There are no comments for Scope in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Scope
        {
            get
            {
                string value = _Scope;
                OnGetScope(ref value);
                return value;
            }
            set
            {
                if (_Scope != value)
                {
                  OnScopeChanging(ref value);
                  ReportPropertyChanging("Scope");
                  _Scope = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Scope");
                  OnScopeChanged();
              }
            }
        }
        private string _Scope;
        partial void OnGetScope(ref string value);
        partial void OnScopeChanging(ref string value);
        partial void OnScopeChanged();
    
        /// <summary>
        /// There are no comments for AccessToken in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AccessToken
        {
            get
            {
                string value = _AccessToken;
                OnGetAccessToken(ref value);
                return value;
            }
            set
            {
                if (_AccessToken != value)
                {
                  OnAccessTokenChanging(ref value);
                  ReportPropertyChanging("AccessToken");
                  _AccessToken = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AccessToken");
                  OnAccessTokenChanged();
              }
            }
        }
        private string _AccessToken;
        partial void OnGetAccessToken(ref string value);
        partial void OnAccessTokenChanging(ref string value);
        partial void OnAccessTokenChanged();
    
        /// <summary>
        /// There are no comments for RefreshToken in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RefreshToken
        {
            get
            {
                string value = _RefreshToken;
                OnGetRefreshToken(ref value);
                return value;
            }
            set
            {
                if (_RefreshToken != value)
                {
                  OnRefreshTokenChanging(ref value);
                  ReportPropertyChanging("RefreshToken");
                  _RefreshToken = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RefreshToken");
                  OnRefreshTokenChanged();
              }
            }
        }
        private string _RefreshToken;
        partial void OnGetRefreshToken(ref string value);
        partial void OnRefreshTokenChanging(ref string value);
        partial void OnRefreshTokenChanged();
    
        /// <summary>
        /// There are no comments for ProfileImage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProfileImage
        {
            get
            {
                string value = _ProfileImage;
                OnGetProfileImage(ref value);
                return value;
            }
            set
            {
                if (_ProfileImage != value)
                {
                  OnProfileImageChanging(ref value);
                  ReportPropertyChanging("ProfileImage");
                  _ProfileImage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProfileImage");
                  OnProfileImageChanged();
              }
            }
        }
        private string _ProfileImage;
        partial void OnGetProfileImage(ref string value);
        partial void OnProfileImageChanging(ref string value);
        partial void OnProfileImageChanged();
    
        /// <summary>
        /// There are no comments for ExpirationDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ExpirationDate
        {
            get
            {
                global::System.DateTime value = _ExpirationDate;
                OnGetExpirationDate(ref value);
                return value;
            }
            set
            {
                if (_ExpirationDate != value)
                {
                  OnExpirationDateChanging(ref value);
                  ReportPropertyChanging("ExpirationDate");
                  _ExpirationDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExpirationDate");
                  OnExpirationDateChanged();
              }
            }
        }
        private global::System.DateTime _ExpirationDate;
        partial void OnGetExpirationDate(ref global::System.DateTime value);
        partial void OnExpirationDateChanging(ref global::System.DateTime value);
        partial void OnExpirationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_user_acc", "Aspnetuser")]
        public virtual Aspnetuser Aspnetuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_acc", "Aspnetuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_acc", "Aspnetuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aspnetuser> AspnetuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_acc", "Aspnetuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_acc", "Aspnetuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_acc", "Aspnetuser").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UserAccounts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_account_twitch_account", "UserAccounts")]
        public virtual EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<UserAccount>("AceitaspixModel.fk_account_twitch_account", "UserAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<UserAccount>("AceitaspixModel.fk_account_twitch_account", "UserAccounts", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.Withdraw in the schema.
    /// </summary>
    /// <KeyProperties>
    /// IdWithdraw
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="Withdraw")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Withdraw : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Withdraw object.
        /// </summary>
        /// <param name="idWithdraw">Initial value of IdWithdraw.</param>
        /// <param name="idUser">Initial value of IdUser.</param>
        /// <param name="dateTransaction">Initial value of DateTransaction.</param>
        /// <param name="value">Initial value of Value.</param>
        public static Withdraw CreateWithdraw(int idWithdraw, string idUser, global::System.DateTime dateTransaction, decimal value)
        {
            Withdraw withdraw = new Withdraw();
            withdraw.IdWithdraw = idWithdraw;
            withdraw.IdUser = idUser;
            withdraw.DateTransaction = dateTransaction;
            withdraw.Value = value;
            return withdraw;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for IdWithdraw in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IdWithdraw
        {
            get
            {
                int value = _IdWithdraw;
                OnGetIdWithdraw(ref value);
                return value;
            }
            set
            {
                if (_IdWithdraw != value)
                {
                  OnIdWithdrawChanging(ref value);
                  ReportPropertyChanging("IdWithdraw");
                  _IdWithdraw = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdWithdraw");
                  OnIdWithdrawChanged();
              }
            }
        }
        private int _IdWithdraw;
        partial void OnGetIdWithdraw(ref int value);
        partial void OnIdWithdrawChanging(ref int value);
        partial void OnIdWithdrawChanged();
    
        /// <summary>
        /// There are no comments for IdUser in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string IdUser
        {
            get
            {
                string value = _IdUser;
                OnGetIdUser(ref value);
                return value;
            }
            set
            {
                if (_IdUser != value)
                {
                  OnIdUserChanging(ref value);
                  ReportPropertyChanging("IdUser");
                  _IdUser = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("IdUser");
                  OnIdUserChanged();
              }
            }
        }
        private string _IdUser;
        partial void OnGetIdUser(ref string value);
        partial void OnIdUserChanging(ref string value);
        partial void OnIdUserChanged();
    
        /// <summary>
        /// There are no comments for DateTransaction in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DateTransaction
        {
            get
            {
                global::System.DateTime value = _DateTransaction;
                OnGetDateTransaction(ref value);
                return value;
            }
            set
            {
                if (_DateTransaction != value)
                {
                  OnDateTransactionChanging(ref value);
                  ReportPropertyChanging("DateTransaction");
                  _DateTransaction = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DateTransaction");
                  OnDateTransactionChanged();
              }
            }
        }
        private global::System.DateTime _DateTransaction;
        partial void OnGetDateTransaction(ref global::System.DateTime value);
        partial void OnDateTransactionChanging(ref global::System.DateTime value);
        partial void OnDateTransactionChanged();
    
        /// <summary>
        /// There are no comments for Value in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Value
        {
            get
            {
                decimal value = _Value;
                OnGetValue(ref value);
                return value;
            }
            set
            {
                if (_Value != value)
                {
                  OnValueChanging(ref value);
                  ReportPropertyChanging("Value");
                  _Value = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Value");
                  OnValueChanged();
              }
            }
        }
        private decimal _Value = 0.00m;
        partial void OnGetValue(ref decimal value);
        partial void OnValueChanging(ref decimal value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_user_withdraw", "Aspnetuser")]
        public virtual Aspnetuser Aspnetuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_withdraw", "Aspnetuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_withdraw", "Aspnetuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aspnetuser> AspnetuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_withdraw", "Aspnetuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_withdraw", "Aspnetuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_withdraw", "Aspnetuser").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.Payment in the schema.
    /// </summary>
    /// <KeyProperties>
    /// IdPayment
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Payment object.
        /// </summary>
        /// <param name="idPayment">Initial value of IdPayment.</param>
        /// <param name="value">Initial value of Value.</param>
        /// <param name="idStreamer">Initial value of IdStreamer.</param>
        /// <param name="dateTransaction">Initial value of DateTransaction.</param>
        public static Payment CreatePayment(int idPayment, decimal value, int idStreamer, global::System.DateTime dateTransaction)
        {
            Payment payment = new Payment();
            payment.IdPayment = idPayment;
            payment.Value = value;
            payment.IdStreamer = idStreamer;
            payment.DateTransaction = dateTransaction;
            return payment;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for IdPayment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IdPayment
        {
            get
            {
                int value = _IdPayment;
                OnGetIdPayment(ref value);
                return value;
            }
            set
            {
                if (_IdPayment != value)
                {
                  OnIdPaymentChanging(ref value);
                  ReportPropertyChanging("IdPayment");
                  _IdPayment = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdPayment");
                  OnIdPaymentChanged();
              }
            }
        }
        private int _IdPayment;
        partial void OnGetIdPayment(ref int value);
        partial void OnIdPaymentChanging(ref int value);
        partial void OnIdPaymentChanged();
    
        /// <summary>
        /// There are no comments for Message in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Message
        {
            get
            {
                string value = _Message;
                OnGetMessage(ref value);
                return value;
            }
            set
            {
                if (_Message != value)
                {
                  OnMessageChanging(ref value);
                  ReportPropertyChanging("Message");
                  _Message = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Message");
                  OnMessageChanged();
              }
            }
        }
        private string _Message;
        partial void OnGetMessage(ref string value);
        partial void OnMessageChanging(ref string value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// There are no comments for Value in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Value
        {
            get
            {
                decimal value = _Value;
                OnGetValue(ref value);
                return value;
            }
            set
            {
                if (_Value != value)
                {
                  OnValueChanging(ref value);
                  ReportPropertyChanging("Value");
                  _Value = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Value");
                  OnValueChanged();
              }
            }
        }
        private decimal _Value = 0.00m;
        partial void OnGetValue(ref decimal value);
        partial void OnValueChanging(ref decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// There are no comments for IdStreamer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IdStreamer
        {
            get
            {
                int value = _IdStreamer;
                OnGetIdStreamer(ref value);
                return value;
            }
            set
            {
                if (_IdStreamer != value)
                {
                  OnIdStreamerChanging(ref value);
                  ReportPropertyChanging("IdStreamer");
                  _IdStreamer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdStreamer");
                  OnIdStreamerChanged();
              }
            }
        }
        private int _IdStreamer;
        partial void OnGetIdStreamer(ref int value);
        partial void OnIdStreamerChanging(ref int value);
        partial void OnIdStreamerChanged();
    
        /// <summary>
        /// There are no comments for DateTransaction in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DateTransaction
        {
            get
            {
                global::System.DateTime value = _DateTransaction;
                OnGetDateTransaction(ref value);
                return value;
            }
            set
            {
                if (_DateTransaction != value)
                {
                  OnDateTransactionChanging(ref value);
                  ReportPropertyChanging("DateTransaction");
                  _DateTransaction = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DateTransaction");
                  OnDateTransactionChanged();
              }
            }
        }
        private global::System.DateTime _DateTransaction;
        partial void OnGetDateTransaction(ref global::System.DateTime value);
        partial void OnDateTransactionChanging(ref global::System.DateTime value);
        partial void OnDateTransactionChanged();
    
        /// <summary>
        /// There are no comments for NicknameDonate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string NicknameDonate
        {
            get
            {
                string value = _NicknameDonate;
                OnGetNicknameDonate(ref value);
                return value;
            }
            set
            {
                if (_NicknameDonate != value)
                {
                  OnNicknameDonateChanging(ref value);
                  ReportPropertyChanging("NicknameDonate");
                  _NicknameDonate = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NicknameDonate");
                  OnNicknameDonateChanged();
              }
            }
        }
        private string _NicknameDonate;
        partial void OnGetNicknameDonate(ref string value);
        partial void OnNicknameDonateChanging(ref string value);
        partial void OnNicknameDonateChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Status
        {
            get
            {
                int? value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private int? _Status = 1;
        partial void OnGetStatus(ref int? value);
        partial void OnStatusChanging(ref int? value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for UserAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_user_receive", "UserAccount")]
        public virtual UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserAccount>("AceitaspixModel.fk_user_receive", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserAccount>("AceitaspixModel.fk_user_receive", "UserAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for UserAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserAccount>("AceitaspixModel.fk_user_receive", "UserAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<UserAccount>("AceitaspixModel.fk_user_receive", "UserAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserAccount>("AceitaspixModel.fk_user_receive", "UserAccount").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PaymentStatus in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_payment_status", "PaymentStatus")]
        public virtual PaymentStatus PaymentStatus
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PaymentStatus>("AceitaspixModel.fk_payment_status", "PaymentStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PaymentStatus>("AceitaspixModel.fk_payment_status", "PaymentStatus").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for PaymentStatus in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentStatus> PaymentStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PaymentStatus>("AceitaspixModel.fk_payment_status", "PaymentStatus");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<PaymentStatus>("AceitaspixModel.fk_payment_status", "PaymentStatus", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PaymentStatus>("AceitaspixModel.fk_payment_status", "PaymentStatus").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.UserAccount in the schema.
    /// </summary>
    /// <KeyProperties>
    /// IdUserAccount
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="UserAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccount : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UserAccount object.
        /// </summary>
        /// <param name="idUserAccount">Initial value of IdUserAccount.</param>
        /// <param name="fullName">Initial value of FullName.</param>
        /// <param name="birth">Initial value of Birth.</param>
        /// <param name="postalCode">Initial value of PostalCode.</param>
        /// <param name="street">Initial value of Street.</param>
        /// <param name="number">Initial value of Number.</param>
        /// <param name="city">Initial value of City.</param>
        /// <param name="state">Initial value of State.</param>
        /// <param name="phoneNumber">Initial value of PhoneNumber.</param>
        /// <param name="streamer">Initial value of Streamer.</param>
        /// <param name="gender">Initial value of Gender.</param>
        /// <param name="cpf">Initial value of Cpf.</param>
        /// <param name="userId">Initial value of UserId.</param>
        public static UserAccount CreateUserAccount(int idUserAccount, string fullName, global::System.DateTime birth, string postalCode, string street, string number, string city, string state, string phoneNumber, bool streamer, string gender, string cpf, string userId)
        {
            UserAccount userAccount = new UserAccount();
            userAccount.IdUserAccount = idUserAccount;
            userAccount.FullName = fullName;
            userAccount.Birth = birth;
            userAccount.PostalCode = postalCode;
            userAccount.Street = street;
            userAccount.Number = number;
            userAccount.City = city;
            userAccount.State = state;
            userAccount.PhoneNumber = phoneNumber;
            userAccount.Streamer = streamer;
            userAccount.Gender = gender;
            userAccount.Cpf = cpf;
            userAccount.UserId = userId;
            return userAccount;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for IdUserAccount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IdUserAccount
        {
            get
            {
                int value = _IdUserAccount;
                OnGetIdUserAccount(ref value);
                return value;
            }
            set
            {
                if (_IdUserAccount != value)
                {
                  OnIdUserAccountChanging(ref value);
                  ReportPropertyChanging("IdUserAccount");
                  _IdUserAccount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdUserAccount");
                  OnIdUserAccountChanged();
              }
            }
        }
        private int _IdUserAccount;
        partial void OnGetIdUserAccount(ref int value);
        partial void OnIdUserAccountChanging(ref int value);
        partial void OnIdUserAccountChanged();
    
        /// <summary>
        /// There are no comments for FullName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FullName
        {
            get
            {
                string value = _FullName;
                OnGetFullName(ref value);
                return value;
            }
            set
            {
                if (_FullName != value)
                {
                  OnFullNameChanging(ref value);
                  ReportPropertyChanging("FullName");
                  _FullName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FullName");
                  OnFullNameChanged();
              }
            }
        }
        private string _FullName;
        partial void OnGetFullName(ref string value);
        partial void OnFullNameChanging(ref string value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// There are no comments for Birth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime Birth
        {
            get
            {
                global::System.DateTime value = _Birth;
                OnGetBirth(ref value);
                return value;
            }
            set
            {
                if (_Birth != value)
                {
                  OnBirthChanging(ref value);
                  ReportPropertyChanging("Birth");
                  _Birth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Birth");
                  OnBirthChanged();
              }
            }
        }
        private global::System.DateTime _Birth;
        partial void OnGetBirth(ref global::System.DateTime value);
        partial void OnBirthChanging(ref global::System.DateTime value);
        partial void OnBirthChanged();
    
        /// <summary>
        /// There are no comments for PostalCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PostalCode
        {
            get
            {
                string value = _PostalCode;
                OnGetPostalCode(ref value);
                return value;
            }
            set
            {
                if (_PostalCode != value)
                {
                  OnPostalCodeChanging(ref value);
                  ReportPropertyChanging("PostalCode");
                  _PostalCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PostalCode");
                  OnPostalCodeChanged();
              }
            }
        }
        private string _PostalCode;
        partial void OnGetPostalCode(ref string value);
        partial void OnPostalCodeChanging(ref string value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// There are no comments for Street in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Street
        {
            get
            {
                string value = _Street;
                OnGetStreet(ref value);
                return value;
            }
            set
            {
                if (_Street != value)
                {
                  OnStreetChanging(ref value);
                  ReportPropertyChanging("Street");
                  _Street = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Street");
                  OnStreetChanged();
              }
            }
        }
        private string _Street;
        partial void OnGetStreet(ref string value);
        partial void OnStreetChanging(ref string value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// There are no comments for Number in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Number
        {
            get
            {
                string value = _Number;
                OnGetNumber(ref value);
                return value;
            }
            set
            {
                if (_Number != value)
                {
                  OnNumberChanging(ref value);
                  ReportPropertyChanging("Number");
                  _Number = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Number");
                  OnNumberChanged();
              }
            }
        }
        private string _Number;
        partial void OnGetNumber(ref string value);
        partial void OnNumberChanging(ref string value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// There are no comments for Complement in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Complement
        {
            get
            {
                string value = _Complement;
                OnGetComplement(ref value);
                return value;
            }
            set
            {
                if (_Complement != value)
                {
                  OnComplementChanging(ref value);
                  ReportPropertyChanging("Complement");
                  _Complement = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Complement");
                  OnComplementChanged();
              }
            }
        }
        private string _Complement;
        partial void OnGetComplement(ref string value);
        partial void OnComplementChanging(ref string value);
        partial void OnComplementChanged();
    
        /// <summary>
        /// There are no comments for City in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string City
        {
            get
            {
                string value = _City;
                OnGetCity(ref value);
                return value;
            }
            set
            {
                if (_City != value)
                {
                  OnCityChanging(ref value);
                  ReportPropertyChanging("City");
                  _City = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("City");
                  OnCityChanged();
              }
            }
        }
        private string _City;
        partial void OnGetCity(ref string value);
        partial void OnCityChanging(ref string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// There are no comments for State in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string State
        {
            get
            {
                string value = _State;
                OnGetState(ref value);
                return value;
            }
            set
            {
                if (_State != value)
                {
                  OnStateChanging(ref value);
                  ReportPropertyChanging("State");
                  _State = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("State");
                  OnStateChanged();
              }
            }
        }
        private string _State;
        partial void OnGetState(ref string value);
        partial void OnStateChanging(ref string value);
        partial void OnStateChanged();
    
        /// <summary>
        /// There are no comments for PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PhoneNumber
        {
            get
            {
                string value = _PhoneNumber;
                OnGetPhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_PhoneNumber != value)
                {
                  OnPhoneNumberChanging(ref value);
                  ReportPropertyChanging("PhoneNumber");
                  _PhoneNumber = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PhoneNumber");
                  OnPhoneNumberChanged();
              }
            }
        }
        private string _PhoneNumber;
        partial void OnGetPhoneNumber(ref string value);
        partial void OnPhoneNumberChanging(ref string value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for IdConfigTwitch in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? IdConfigTwitch
        {
            get
            {
                int? value = _IdConfigTwitch;
                OnGetIdConfigTwitch(ref value);
                return value;
            }
            set
            {
                if (_IdConfigTwitch != value)
                {
                  OnIdConfigTwitchChanging(ref value);
                  ReportPropertyChanging("IdConfigTwitch");
                  _IdConfigTwitch = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdConfigTwitch");
                  OnIdConfigTwitchChanged();
              }
            }
        }
        private int? _IdConfigTwitch;
        partial void OnGetIdConfigTwitch(ref int? value);
        partial void OnIdConfigTwitchChanging(ref int? value);
        partial void OnIdConfigTwitchChanged();
    
        /// <summary>
        /// There are no comments for Streamer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual bool Streamer
        {
            get
            {
                bool value = _Streamer;
                OnGetStreamer(ref value);
                return value;
            }
            set
            {
                if (_Streamer != value)
                {
                  OnStreamerChanging(ref value);
                  ReportPropertyChanging("Streamer");
                  _Streamer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Streamer");
                  OnStreamerChanged();
              }
            }
        }
        private bool _Streamer;
        partial void OnGetStreamer(ref bool value);
        partial void OnStreamerChanging(ref bool value);
        partial void OnStreamerChanged();
    
        /// <summary>
        /// There are no comments for Gender in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Gender
        {
            get
            {
                string value = _Gender;
                OnGetGender(ref value);
                return value;
            }
            set
            {
                if (_Gender != value)
                {
                  OnGenderChanging(ref value);
                  ReportPropertyChanging("Gender");
                  _Gender = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Gender");
                  OnGenderChanged();
              }
            }
        }
        private string _Gender = @"M";
        partial void OnGetGender(ref string value);
        partial void OnGenderChanging(ref string value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// There are no comments for Cpf in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Cpf
        {
            get
            {
                string value = _Cpf;
                OnGetCpf(ref value);
                return value;
            }
            set
            {
                if (_Cpf != value)
                {
                  OnCpfChanging(ref value);
                  ReportPropertyChanging("Cpf");
                  _Cpf = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Cpf");
                  OnCpfChanged();
              }
            }
        }
        private string _Cpf;
        partial void OnGetCpf(ref string value);
        partial void OnCpfChanging(ref string value);
        partial void OnCpfChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserId
        {
            get
            {
                string value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private string _UserId;
        partial void OnGetUserId(ref string value);
        partial void OnUserIdChanging(ref string value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for TwitchChannel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TwitchChannel
        {
            get
            {
                string value = _TwitchChannel;
                OnGetTwitchChannel(ref value);
                return value;
            }
            set
            {
                if (_TwitchChannel != value)
                {
                  OnTwitchChannelChanging(ref value);
                  ReportPropertyChanging("TwitchChannel");
                  _TwitchChannel = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TwitchChannel");
                  OnTwitchChannelChanged();
              }
            }
        }
        private string _TwitchChannel;
        partial void OnGetTwitchChannel(ref string value);
        partial void OnTwitchChannelChanging(ref string value);
        partial void OnTwitchChannelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for UserTwitchAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_account_twitch_account", "UserTwitchAccount")]
        public virtual UserTwitchAccount UserTwitchAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserTwitchAccount>("AceitaspixModel.fk_account_twitch_account", "UserTwitchAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserTwitchAccount>("AceitaspixModel.fk_account_twitch_account", "UserTwitchAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for UserTwitchAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserTwitchAccount> UserTwitchAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserTwitchAccount>("AceitaspixModel.fk_account_twitch_account", "UserTwitchAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<UserTwitchAccount>("AceitaspixModel.fk_account_twitch_account", "UserTwitchAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UserTwitchAccount>("AceitaspixModel.fk_account_twitch_account", "UserTwitchAccount").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_user_account_aspnetuser", "Aspnetuser")]
        public virtual Aspnetuser Aspnetuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_account_aspnetuser", "Aspnetuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_account_aspnetuser", "Aspnetuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Aspnetuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aspnetuser> AspnetuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_account_aspnetuser", "Aspnetuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_account_aspnetuser", "Aspnetuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Aspnetuser>("AceitaspixModel.fk_user_account_aspnetuser", "Aspnetuser").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Payments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_user_receive", "Payments")]
        public virtual EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Payment>("AceitaspixModel.fk_user_receive", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Payment>("AceitaspixModel.fk_user_receive", "Payments", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for AceitaspixModel.PaymentStatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// IdPaymentStatus
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="AceitaspixModel", Name="PaymentStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentStatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PaymentStatus object.
        /// </summary>
        /// <param name="idPaymentStatus">Initial value of IdPaymentStatus.</param>
        public static PaymentStatus CreatePaymentStatus(int idPaymentStatus)
        {
            PaymentStatus paymentStatus = new PaymentStatus();
            paymentStatus.IdPaymentStatus = idPaymentStatus;
            return paymentStatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for IdPaymentStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IdPaymentStatus
        {
            get
            {
                int value = _IdPaymentStatus;
                OnGetIdPaymentStatus(ref value);
                return value;
            }
            set
            {
                if (_IdPaymentStatus != value)
                {
                  OnIdPaymentStatusChanging(ref value);
                  ReportPropertyChanging("IdPaymentStatus");
                  _IdPaymentStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdPaymentStatus");
                  OnIdPaymentStatusChanged();
              }
            }
        }
        private int _IdPaymentStatus;
        partial void OnGetIdPaymentStatus(ref int value);
        partial void OnIdPaymentStatusChanging(ref int value);
        partial void OnIdPaymentStatusChanged();
    
        /// <summary>
        /// There are no comments for PaymentStatus1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PaymentStatus1
        {
            get
            {
                string value = _PaymentStatus1;
                OnGetPaymentStatus1(ref value);
                return value;
            }
            set
            {
                if (_PaymentStatus1 != value)
                {
                  OnPaymentStatus1Changing(ref value);
                  ReportPropertyChanging("PaymentStatus1");
                  _PaymentStatus1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PaymentStatus1");
                  OnPaymentStatus1Changed();
              }
            }
        }
        private string _PaymentStatus1;
        partial void OnGetPaymentStatus1(ref string value);
        partial void OnPaymentStatus1Changing(ref string value);
        partial void OnPaymentStatus1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Payments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AceitaspixModel", "fk_payment_status", "Payments")]
        public virtual EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Payment>("AceitaspixModel.fk_payment_status", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Payment>("AceitaspixModel.fk_payment_status", "Payments", value);
                }
            }
        }

        #endregion
    }

}
